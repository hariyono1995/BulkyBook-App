@*@model Product*@
@model FinalBulkyBook.Models.ViewModels.ProductVM

@{
    ViewData["Title"] = Model.Product.Id != 0 ? "Update" : "Create";
}

<form method="post" asp-action="Upsert" enctype="multipart/form-data">
  <div class="row">
        <div class="col-10">
            <div class="border p-3 mt-4">
                <div class="row">
                    <h2 class="text-primary">@(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
                    <hr />
                </div>

                <div class="mt-2 row">
                    @*<div asp-validation-summary="All"></div>*@
                    <input asp-for="Product.Id" hidden />
                    <input asp-for="Product.ImageUrl" hidden />

                    <div class="mb-3">
                        <label class="col-sm-2 col-form-label" asp-for="Product.Title"></label>
                        <input asp-for="Product.Title" class="form-control" />
                        <span asp-validation-for="Product.Title" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Product.Description"></label>
                        <textarea rows="3" style="resize:none" asp-for="Product.Description" class="form-control"></textarea>
                        <span asp-validation-for="Product.Description" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.ISBN"></label>
                        <input asp-for="Product.ISBN" class="form-control" />
                        <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.Author"></label>
                        <input asp-for="Product.Author" class="form-control" />
                        <span asp-validation-for="Product.Author" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.ListPrice"></label>
                        <input asp-for="Product.ListPrice" class="form-control" />
                        <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.Price"></label>
                        <input asp-for="Product.Price" class="form-control" />
                        <span asp-validation-for="Product.Price" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.Price50"></label>
                        <input asp-for="Product.Price50" class="form-control" />
                        <span asp-validation-for="Product.Price50" class="text-danger"></span>
                    </div>
                    <div class="mb-3 col-6">
                        <label asp-for="Product.Price100"></label>
                        <input asp-for="Product.Price100" class="form-control" />
                        <span asp-validation-for="Product.Price100" class="text-danger"></span>
                    </div>

                    @*Using ViewBag and ViewData to make select dropdown*@
                    @*<div class="my-2">
                    <label asp-for="Product.CategoryId"></label>
                    <select asp-for="Product.CategoryId" asp-items="ViewBag.CategoryList" class="form-select">
                    <option disabled selected>--Select Category--</option>
                    </select>
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                    </div>

                    <div class="my-2">
                    <label asp-for="Product.CoverTypeId"></label>
                    <select asp-for="Product.CoverTypeId" asp-items="(@ViewData["CoverTypeList"] as IEnumerable<SelectListItem>)" class="form-select">
                    <option disabled selected>--Select Cover Type--</option>
                    </select>
                    <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                    </div>*@

                    @*Using ViewModel to make select dropdown*@

                    <div class="mb-3 col-6">
                        <label asp-for="Product.CategoryId"></label>
                        <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select">
                            <option disabled selected>--Select Category--</option>
                        </select>
                        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                    </div>

                    <div class="mb-3 col-6">
                        <label asp-for="Product.CoverTypeId"></label>
                        <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList" class="form-select">
                            <option disabled selected>--Select Cover Type--</option>
                        </select>
                        <span asp-validation-for="Product.CoverTypeId" class="text-danger"></span>
                    </div>

                    <div class="my-2">
                        <label asp-for="Product.ImageUrl"></label>
                        <input asp-for="Product.ImageUrl" id="uploadBox" name="file" type="file" class="form-control" />
                        <span asp-validation-for="Product.ImageUrl" class="text-danger"></span>
                    </div>

                    <div class="mt-4 mb-2 col-12">
                        <a asp-controller="Product" asp-action="Index" class="btn btn-secondary me-2" style="width:150px">Back to List</a>
                        @if (Model.Product.Id != 0)
                        {
                            <button type="submit" onclick="return ValidationInput()" asp-controller="Product" asp-action="Upsert" class="btn btn-primary" style="width:150px">Update</button>
                        }
                        else
                        {
                            <button type="submit" onclick="return ValidationInput()" asp-controller="Product" asp-action="Upsert" class="btn btn-primary" style="width:150px">Create</button>
                        }
                    </div>
                </div>
            </div>
        </div>
      <div class="col-2">
            <div class="col-2 pt-4">
                @*<img id="displayImage" />*@

                <img src="@Model.Product.ImageUrl"
                     style="border-radius:5px; border:1px solid #bbb9b9; width:250px;height:auto;object-fit:cover" />
            </div>
      </div>
  </div>
    
  
</form>

@section Scripts {
    @{
    <partial name="_ValidationScriptsPartial" />
    }

 
    <script>
        function ValidationInput() {
            if(document.getElementById("uploadBox").value == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please upload an Image!',
                });
                return false;
            }
            return true;
           //return alert("hallo world");
        }
    </script>

    <script>
        tinymce.init({
            height: 500,
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ]
        });
    </script>
}

